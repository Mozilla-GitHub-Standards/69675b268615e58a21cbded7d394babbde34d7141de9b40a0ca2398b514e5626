<?xml version="1.0" encoding="UTF-8"?>
<transformation>
  <info>
    <name>bugzilla_to_json</name>
    <description/>
    <extended_description/>
    <trans_version/>
    <trans_type>Normal</trans_type>
    <trans_status>0</trans_status>
    <directory>&#47;</directory>
    <parameters>
        <parameter>
            <name>BUG_IDS_PARTITION</name>
            <default_value>(bug_id = 639999)</default_value>
            <description/>
        </parameter>
        <parameter>
            <name>START_TIME</name>
            <default_value>0</default_value>
            <description/>
        </parameter>
    </parameters>
    <log>
<trans-log-table><connection/>
<schema/>
<table/>
<size_limit_lines/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STATUS</id><enabled>Y</enabled><name>STATUS</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name><subject/></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name><subject/></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name><subject/></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name><subject/></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name><subject/></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name><subject/></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>STARTDATE</id><enabled>Y</enabled><name>STARTDATE</name></field><field><id>ENDDATE</id><enabled>Y</enabled><name>ENDDATE</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>DEPDATE</id><enabled>Y</enabled><name>DEPDATE</name></field><field><id>REPLAYDATE</id><enabled>Y</enabled><name>REPLAYDATE</name></field><field><id>LOG_FIELD</id><enabled>Y</enabled><name>LOG_FIELD</name></field></trans-log-table>
<perf-log-table><connection/>
<schema/>
<table/>
<interval/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>SEQ_NR</id><enabled>Y</enabled><name>SEQ_NR</name></field><field><id>LOGDATE</id><enabled>Y</enabled><name>LOGDATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>INPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>INPUT_BUFFER_ROWS</name></field><field><id>OUTPUT_BUFFER_ROWS</id><enabled>Y</enabled><name>OUTPUT_BUFFER_ROWS</name></field></perf-log-table>
<channel-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>LOGGING_OBJECT_TYPE</id><enabled>Y</enabled><name>LOGGING_OBJECT_TYPE</name></field><field><id>OBJECT_NAME</id><enabled>Y</enabled><name>OBJECT_NAME</name></field><field><id>OBJECT_COPY</id><enabled>Y</enabled><name>OBJECT_COPY</name></field><field><id>REPOSITORY_DIRECTORY</id><enabled>Y</enabled><name>REPOSITORY_DIRECTORY</name></field><field><id>FILENAME</id><enabled>Y</enabled><name>FILENAME</name></field><field><id>OBJECT_ID</id><enabled>Y</enabled><name>OBJECT_ID</name></field><field><id>OBJECT_REVISION</id><enabled>Y</enabled><name>OBJECT_REVISION</name></field><field><id>PARENT_CHANNEL_ID</id><enabled>Y</enabled><name>PARENT_CHANNEL_ID</name></field><field><id>ROOT_CHANNEL_ID</id><enabled>Y</enabled><name>ROOT_CHANNEL_ID</name></field></channel-log-table>
<step-log-table><connection/>
<schema/>
<table/>
<timeout_days/>
<field><id>ID_BATCH</id><enabled>Y</enabled><name>ID_BATCH</name></field><field><id>CHANNEL_ID</id><enabled>Y</enabled><name>CHANNEL_ID</name></field><field><id>LOG_DATE</id><enabled>Y</enabled><name>LOG_DATE</name></field><field><id>TRANSNAME</id><enabled>Y</enabled><name>TRANSNAME</name></field><field><id>STEPNAME</id><enabled>Y</enabled><name>STEPNAME</name></field><field><id>STEP_COPY</id><enabled>Y</enabled><name>STEP_COPY</name></field><field><id>LINES_READ</id><enabled>Y</enabled><name>LINES_READ</name></field><field><id>LINES_WRITTEN</id><enabled>Y</enabled><name>LINES_WRITTEN</name></field><field><id>LINES_UPDATED</id><enabled>Y</enabled><name>LINES_UPDATED</name></field><field><id>LINES_INPUT</id><enabled>Y</enabled><name>LINES_INPUT</name></field><field><id>LINES_OUTPUT</id><enabled>Y</enabled><name>LINES_OUTPUT</name></field><field><id>LINES_REJECTED</id><enabled>Y</enabled><name>LINES_REJECTED</name></field><field><id>ERRORS</id><enabled>Y</enabled><name>ERRORS</name></field><field><id>LOG_FIELD</id><enabled>N</enabled><name>LOG_FIELD</name></field></step-log-table>
    </log>
    <maxdate>
      <connection/>
      <table/>
      <field/>
      <offset>0.0</offset>
      <maxdiff>0.0</maxdiff>
    </maxdate>
    <size_rowset>10000</size_rowset>
    <sleep_time_empty>50</sleep_time_empty>
    <sleep_time_full>50</sleep_time_full>
    <unique_connections>Y</unique_connections>
    <feedback_shown>Y</feedback_shown>
    <feedback_size>50000</feedback_size>
    <using_thread_priorities>Y</using_thread_priorities>
    <shared_objects_file/>
    <capture_step_performance>N</capture_step_performance>
    <step_performance_capturing_delay>1000</step_performance_capturing_delay>
    <step_performance_capturing_size_limit>100</step_performance_capturing_size_limit>
    <dependencies>
    </dependencies>
    <partitionschemas>
    </partitionschemas>
    <slaveservers>
    </slaveservers>
    <clusterschemas>
    </clusterschemas>
  <created_user>-</created_user>
  <created_date>2012&#47;03&#47;20 15:57:08.258</created_date>
  <modified_user>-</modified_user>
  <modified_date>2012&#47;03&#47;20 15:57:08.258</modified_date>
  </info>
  <notepads>
    <notepad>
      <note>implement previous values

votes can&apos;t be tracked because they don&apos;t
show up in activities and votes table has no when</note>
      <xloc>700</xloc>
      <yloc>50</yloc>
      <width>453</width>
      <heigth>98</heigth>
      <fontname>Lucida Grande</fontname>
      <fontsize>13</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Merge Order Types

0 = Previous values from ES
1 = Single value current state
2 = Multi value current state
7 = Attachments current state
8 = Flags current state
9 = Bug Activities
10 = Previous version from DWH</note>
      <xloc>300</xloc>
      <yloc>0</yloc>
      <width>299</width>
      <heigth>208</heigth>
      <fontname>Lucida Grande</fontname>
      <fontsize>13</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>Need additional logic in ParseBugHistory or subsequent step
to update last ES version record with new expires_on date
http:&#47;&#47;www.elasticsearch.org&#47;guide&#47;reference&#47;api&#47;update.html</note>
      <xloc>427</xloc>
      <yloc>432</yloc>
      <width>555</width>
      <heigth>76</heigth>
      <fontname>Lucida Grande</fontname>
      <fontsize>13</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
    <notepad>
      <note>The text file output step may require
you to raise the max # of open files
allowed. In the worst case you get one
open file per bug.</note>
      <xloc>1050</xloc>
      <yloc>276</yloc>
      <width>220</width>
      <heigth>62</heigth>
      <fontname>Sans</fontname>
      <fontsize>8</fontsize>
      <fontbold>N</fontbold>
      <fontitalic>N</fontitalic>
      <fontcolorred>0</fontcolorred>
      <fontcolorgreen>0</fontcolorgreen>
      <fontcolorblue>0</fontcolorblue>
      <backgroundcolorred>255</backgroundcolorred>
      <backgroundcolorgreen>165</backgroundcolorgreen>
      <backgroundcolorblue>0</backgroundcolorblue>
      <bordercolorred>100</bordercolorred>
      <bordercolorgreen>100</bordercolorgreen>
      <bordercolorblue>100</bordercolorblue>
      <drawshadow>Y</drawshadow>
    </notepad>
  </notepads>
  <connection>
    <name>bugs</name>
    <server>${bugs_db_host}</server>
    <type>MYSQL</type>
    <access>Native</access>
    <database>${bugs_db_name}</database>
    <port>${bugs_db_port}</port>
    <username>${bugs_db_user}</username>
    <password>${bugs_db_pass}</password>
    <servername/>
    <data_tablespace/>
    <index_tablespace/>
    <attributes>
      <attribute><code>EXTRA_OPTION_MYSQL.autoCommit</code><attribute>false</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.characterEncoding</code><attribute>UTF-8</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.defaultFetchSize</code><attribute>500</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.tinyInt1isBit</code><attribute>false</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useCursorFetch</code><attribute>true</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useServerPrepStmts</code><attribute>true</attribute></attribute>
      <attribute><code>EXTRA_OPTION_MYSQL.useUnicode</code><attribute>true</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_LOWERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>FORCE_IDENTIFIERS_TO_UPPERCASE</code><attribute>N</attribute></attribute>
      <attribute><code>IS_CLUSTERED</code><attribute>N</attribute></attribute>
      <attribute><code>PORT_NUMBER</code><attribute>${bugs_db_port}</attribute></attribute>
      <attribute><code>QUOTE_ALL_FIELDS</code><attribute>N</attribute></attribute>
      <attribute><code>SQL_CONNECT</code><attribute>SET time_zone = &apos;+00:00&apos;;
</attribute></attribute>
      <attribute><code>STREAM_RESULTS</code><attribute>N</attribute></attribute>
      <attribute><code>SUPPORTS_BOOLEAN_DATA_TYPE</code><attribute>N</attribute></attribute>
      <attribute><code>USE_POOLING</code><attribute>N</attribute></attribute>
    </attributes>
  </connection>
  <order>
  <hop> <from>Get bugs</from><to>Flatten bugs record</to><enabled>Y</enabled> </hop>  <hop> <from>Flatten bugs record</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get dependencies</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get new activities</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get attachments</from><to>Flatten attachments record</to><enabled>Y</enabled> </hop>  <hop> <from>Flatten attachments record</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get duplicates</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get bug_groups</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get bug_see_also</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get cc</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get keywords</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Get flags</from><to>Sorted Merge</to><enabled>Y</enabled> </hop>  <hop> <from>Calculator</from><to>Text file output</to><enabled>Y</enabled> </hop>  <hop> <from>Sorted Merge</from><to>Lower Case</to><enabled>Y</enabled> </hop>  <hop> <from>Lower Case</from><to>Parse Bug History</to><enabled>Y</enabled> </hop>  <hop> <from>Delete unneeded fields</from><to>Calculator</to><enabled>Y</enabled> </hop>  <hop> <from>Parse Bug History</from><to>Rownum</to><enabled>Y</enabled> </hop>  <hop> <from>Rownum</from><to>Delete unneeded fields</to><enabled>Y</enabled> </hop>  <hop> <from>Calculator</from><to>Index with ElasticSearch</to><enabled>Y</enabled> </hop>  <hop> <from>Get incremental modified bugs</from><to>Fetch most recent ES version</to><enabled>N</enabled> </hop>  <hop> <from>Fetch most recent ES version</from><to>Sorted Merge</to><enabled>N</enabled> </hop>  </order>
  <step>
    <name>Calculator</name>
    <type>Calculator</type>
    <description/>
    <distribute>N</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
       <calculation><field_name>prefix</field_name>
<calc_type>CONSTANT</calc_type>
<field_a>&#47;etl&#47;output&#47;</field_a>
<field_b/>
<field_c/>
<value_type>String</value_type>
<value_length>-1</value_length>
<value_precision>-1</value_precision>
<remove>Y</remove>
<conversion_mask/>
<decimal_symbol/>
<grouping_symbol/>
<currency_symbol/>
</calculation>
       <calculation><field_name>full_filename</field_name>
<calc_type>ADD</calc_type>
<field_a>prefix</field_a>
<field_b>bug_version_id</field_b>
<field_c/>
<value_type>String</value_type>
<value_length>-1</value_length>
<value_precision>-1</value_precision>
<remove>N</remove>
<conversion_mask/>
<decimal_symbol/>
<grouping_symbol/>
<currency_symbol/>
</calculation>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>950</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Delete unneeded fields</name>
    <type>SelectValues</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>        <select_unspecified>N</select_unspecified>
      <remove>        <name>bug_id</name>
      </remove>      <remove>        <name>modified_ts</name>
      </remove>      <remove>        <name>modified_by</name>
      </remove>      <remove>        <name>field_name</name>
      </remove>      <remove>        <name>field_value</name>
      </remove>      <remove>        <name>field_value_removed</name>
      </remove>      <remove>        <name>attach_id</name>
      </remove>      <remove>        <name>_merge_order</name>
      </remove>      <meta>        <name>new_bug_id</name>
        <rename>bug_id</rename>
        <type>String</type>
        <length>6</length>
        <precision>-2</precision>
        <conversion_mask>000000</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>      <meta>        <name>record_num</name>
        <rename>record_num</rename>
        <type>String</type>
        <length>3</length>
        <precision>-2</precision>
        <conversion_mask>000</conversion_mask>
        <date_format_lenient>false</date_format_lenient>
        <encoding/>
        <decimal_symbol/>
        <grouping_symbol/>
        <currency_symbol/>
        <storage_type/>
      </meta>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>850</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Fetch most recent ES version</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import org.elasticsearch.action.search.SearchResponse;
import org.elasticsearch.action.search.SearchType;
import org.elasticsearch.client.Client;
import org.elasticsearch.client.transport.TransportClient;
import org.elasticsearch.common.settings.ImmutableSettings;
import org.elasticsearch.common.transport.InetSocketTransportAddress;
import org.elasticsearch.common.transport.TransportAddress;
import org.elasticsearch.index.query.QueryBuilders;
import org.elasticsearch.search.sort.SortOrder;
import org.elasticsearch.search.SearchHits;

private Client client;
private String esNodes = "127.0.0.1:9300";
private String esCluster = "elasticsearch";
private String esIndex = "bugs";

public String paramOrDefault(String parameterName, String defaultValue)
{
    String paramValue = getParameter(parameterName);
    if (paramValue != null && paramValue.length() > 0)
    {
        return paramValue;
    }
    return defaultValue;
}
public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
    Object[] r = getRow();

    if (r == null) {
        setOutputDone();
        return false;
    }

    if (first)
    {
        first = false;

        // get esNodes and esCluster from parameters (if available)
        esNodes = paramOrDefault("ES_NODES", esNodes);
        esCluster = paramOrDefault("ES_CLUSTER", esCluster);
        esIndex = paramOrDefault("ES_INDEX", esIndex);
        ImmutableSettings.Builder settings = ImmutableSettings.settingsBuilder();
        settings.put("cluster.name", esCluster);
        TransportClient transportClient = new TransportClient(settings.build());

        String[] nodes = esNodes.split(",");
        for (int i = 0; i < nodes.length; i++)
        {
            String esNode = nodes[i].trim();
            int colon = esNode.indexOf(':');
            String host = esNode.substring(0, colon);
            int port = Integer.parseInt(esNode.substring(colon+1));
            TransportAddress a = new InetSocketTransportAddress(host, port);
            transportClient.addTransportAddress(a);
        }

        client = transportClient;
    }

    r = createOutputRow(r, data.outputRowMeta.size());

    String bugId = get(Fields.In, "bug_id").getString(r);

    // TODO: do we want the version # too (for setting filenames)?
    String mostRecentVersion = getMostRecentVersion(bugId);

    get(Fields.Out, "field_value").setValue(r, mostRecentVersion);
    get(Fields.Out, "_merge_order").setValue(r, 0L);

    putRow(data.outputRowMeta, r);

    return true;
}

public String getMostRecentVersion(String bugId) {
    String field = "bug_id";
    String[] searchIndex = new String[]{esIndex};
    String[] searchTypes = new String[]{"bug_version"};
    try {
    SearchResponse response = (SearchResponse)client.prepareSearch(searchIndex).setTypes(searchTypes)
            .setSearchType(SearchType.DEFAULT)
            .setTimeout("5s")
            .setQuery(QueryBuilders.fieldQuery(field, bugId))
            .setFrom(0).setSize(1024).setExplain(false)
            .addSort("modified_ts", SortOrder.DESC)
            .execute()
            .actionGet();
    
    final SearchHits hits = response.getHits();
    
    if (hits.getTotalHits() > 0) {
        return hits.hits()[0].sourceAsString();
    }
    } catch (Exception e) {
        System.out.println("ERROR: " + e.getMessage());
        e.printStackTrace();
    }
    return null;
}


]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>modified_ts</field_name>

        <field_type>Integer</field_type>

        <field_length>12</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>modified_by</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_name</field_name>

        <field_type>String</field_type>

        <field_length>64</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value_removed</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>attach_id</field_name>

        <field_type>Integer</field_type>

        <field_length>9</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>_merge_order</field_name>

        <field_type>Integer</field_type>

        <field_length>15</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>ES_NODES</parameter_tag>
<parameter_value>${ES_NODES}</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>ES_CLUSTER</parameter_tag>
<parameter_value>${ES_CLUSTER}</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Flatten attachments record</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Main</class_name>

        <class_source><![CDATA[private int outputRowSize = 0;
private String[] attachments_fields = new String[] {"created_ts", "created_by", "attachments.ispatch", "attachments.isobsolete", "attachments.isprivate"/*, "attachments.isurl"*/};

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] newRow;
	Object[] r = getRow();

	if (r == null) {
		setOutputDone();
		return false;
	}

    if (first)
    {
        first = false;
		outputRowSize = data.outputRowMeta.size();
    }

	for (int i = 0; i < attachments_fields.length; i++) {
		String value = get(Fields.In, attachments_fields[i]).getString(r);
		newRow = createOutputRow(null, outputRowSize);
		get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
		get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
		get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
		get(Fields.Out, "field_name").setValue(newRow, attachments_fields[i]);
		get(Fields.Out, "field_value").setValue(newRow, value);
		get(Fields.Out, "attach_id").setValue(newRow, get(Fields.In, "attach_id").getInteger(r));
		get(Fields.Out, "_merge_order").setValue(newRow, 7L);
	    putRow(data.outputRowMeta, newRow);
	}

	return true;
}
]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>bug_id</field_name>

        <field_type>Integer</field_type>

        <field_length>9</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>modified_ts</field_name>

        <field_type>Integer</field_type>

        <field_length>12</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>modified_by</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_name</field_name>

        <field_type>String</field_type>

        <field_length>64</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value_removed</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>attach_id</field_name>

        <field_type>Integer</field_type>

        <field_length>9</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>_merge_order</field_name>

        <field_type>Integer</field_type>

        <field_length>15</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>Y</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>BUGS_TABLE_COLUMNS</parameter_tag>
<parameter_value>${BUGS_TABLE_COLUMNS}</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>750</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Flatten bugs record</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Main</class_name>

        <class_source><![CDATA[private int outputRowSize = 0;
private String[] bugs_fields;

public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
	Object[] newRow;
	Object[] r = getRow();

	if (r == null) {
		// Output end of stream marker row
		newRow = createOutputRow(null, outputRowSize);
		get(Fields.Out, "bug_id").setValue(newRow, 999999999L);
		//get(Fields.Out, "_merge_order").setValue(newRow, 10L);
	    putRow(data.outputRowMeta, newRow);

		setOutputDone();
		return false;
	}

    if (first)
    {
        first = false;
		outputRowSize = data.outputRowMeta.size();
		bugs_fields = getParameter("BUGS_TABLE_COLUMNS").split(",");

    }

	newRow = createOutputRow(null, outputRowSize);
	get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
	get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
	get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
	get(Fields.Out, "field_name").setValue(newRow, "created_ts");
	get(Fields.Out, "field_value").setValue(newRow, get(Fields.In, "created_ts").getString(r));
	get(Fields.Out, "_merge_order").setValue(newRow, 1L);
    putRow(data.outputRowMeta, newRow);

	newRow = createOutputRow(null, outputRowSize);
	get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
	get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
	get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
	get(Fields.Out, "field_name").setValue(newRow, "created_by");
	get(Fields.Out, "field_value").setValue(newRow, get(Fields.In, "created_by").getString(r));
	get(Fields.Out, "_merge_order").setValue(newRow, 1L);
    putRow(data.outputRowMeta, newRow);

	newRow = createOutputRow(null, outputRowSize);
	get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
	get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
	get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
	get(Fields.Out, "field_name").setValue(newRow, "assigned_to");
	get(Fields.Out, "field_value").setValue(newRow, get(Fields.In, "assigned_to").getString(r));
	get(Fields.Out, "_merge_order").setValue(newRow, 1L);
    putRow(data.outputRowMeta, newRow);

	newRow = createOutputRow(null, outputRowSize);
	get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
	get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
	get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
	get(Fields.Out, "field_name").setValue(newRow, "qa_contact");
	get(Fields.Out, "field_value").setValue(newRow, get(Fields.In, "qa_contact").getString(r));
	get(Fields.Out, "_merge_order").setValue(newRow, 1L);
    putRow(data.outputRowMeta, newRow);

	for (int i = 0; i < bugs_fields.length; i++) {
		String value = get(Fields.In, bugs_fields[i]).getString(r);
		if (!"---".equals(value)) {
			newRow = createOutputRow(null, outputRowSize);
			get(Fields.Out, "bug_id").setValue(newRow, get(Fields.In, "bug_id").getInteger(r));
			get(Fields.Out, "modified_ts").setValue(newRow, get(Fields.In, "modified_ts").getInteger(r));
			get(Fields.Out, "modified_by").setValue(newRow, get(Fields.In, "modified_by").getString(r));
			get(Fields.Out, "field_name").setValue(newRow, bugs_fields[i]);
			get(Fields.Out, "field_value").setValue(newRow, value);
			get(Fields.Out, "_merge_order").setValue(newRow, 1L);
		    putRow(data.outputRowMeta, newRow);
		}
	}

	return true;
}
]]></class_source>
        </definition>
    </definitions>
    <fields>
        <field>
        <field_name>bug_id</field_name>

        <field_type>Integer</field_type>

        <field_length>9</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>modified_ts</field_name>

        <field_type>Integer</field_type>

        <field_length>12</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>modified_by</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_name</field_name>

        <field_type>String</field_type>

        <field_length>64</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>field_value_removed</field_name>

        <field_type>String</field_type>

        <field_length>255</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>attach_id</field_name>

        <field_type>Integer</field_type>

        <field_length>9</field_length>

        <field_precision>-1</field_precision>

        </field>
        <field>
        <field_name>_merge_order</field_name>

        <field_type>Integer</field_type>

        <field_length>15</field_length>

        <field_precision>-1</field_precision>

        </field>
    </fields><clear_result_fields>Y</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>BUGS_TABLE_COLUMNS</parameter_tag>
<parameter_value>${BUGS_TABLE_COLUMNS}</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>50</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get attachments</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, UNIX_TIMESTAMP(a.creation_ts)*1000 AS modified_ts
	, login_name AS modified_by
	, UNIX_TIMESTAMP(a.creation_ts)*1000 AS created_ts
	, login_name AS created_by
	, ispatch AS &apos;attachments.ispatch&apos;
	, isobsolete AS &apos;attachments.isobsolete&apos;
	, isprivate AS &apos;attachments.isprivate&apos;
	-- , isurl AS &apos;attachments.isurl&apos;
	, attach_id
FROM
    attachments a
	JOIN (SELECT userid, login_name, realname FROM profiles) p ON a.submitter_id = p.userid
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY
    bug_id,
	attach_id
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>750</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get bug_groups</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;bug_group&apos; AS field_name
	, CAST(g.`name` AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 2 AS _merge_order
FROM bug_group_map bg
JOIN groups g ON bg.group_id = g.id
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get bug_see_also</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;see_also&apos; AS field_name
	, CAST(`value` AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 1 AS _merge_order
FROM bug_see_also
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>150</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get bugs</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, UNIX_TIMESTAMP(b.creation_ts)*1000 AS modified_ts
	, pr.login_name AS modified_by
	, UNIX_TIMESTAMP(b.creation_ts)*1000 AS created_ts
	, pr.login_name AS created_by
	, pa.login_name AS assigned_to
	, pq.login_name AS qa_contact
	, prod.`name` AS product
	, comp.`name` AS component
	, ${BUGS_TABLE_COLUMNS}
FROM bugs b
	LEFT JOIN profiles pr ON b.reporter = pr.userid
	LEFT JOIN profiles pa ON b.assigned_to = pa.userid
	LEFT JOIN profiles pq ON b.qa_contact = pq.userid
    LEFT JOIN products prod ON prod.id = product_id
    LEFT JOIN components comp ON comp.id = component_id
WHERE
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>50</xloc>
      <yloc>150</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get cc</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;cc&apos; AS field_name
	, CAST(p.login_name AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 2 AS _merge_order
FROM cc
JOIN profiles p ON cc.who = p.userid
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get dependencies</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT blocked AS bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;dependson&apos; AS field_name
	, CAST(dependson AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 2 AS _merge_order
FROM dependencies d
WHERE blocked IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
UNION
SELECT dependson
	, null
	, null
	, &apos;blocked&apos;
	, CAST(blocked AS char(255))
	, null
	, null
	, 2
FROM dependencies d
WHERE dependson IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>250</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get duplicates</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT dupe AS bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;dupe_of&apos; AS field_name
	, CAST(dupe_of AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 2 AS _merge_order
FROM duplicates d
WHERE dupe IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
UNION
SELECT dupe_of
	, null
	, null
	, &apos;dupe_by&apos;
	, CAST(dupe AS char(255))
	, null
	, null
	, 2
FROM duplicates d
WHERE dupe_of IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>350</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get flags</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, UNIX_TIMESTAMP(f.creation_date)*1000 AS modified_ts
	, ps.login_name AS modified_by
	, &apos;flagtypes.name&apos; AS field_name
	, CONCAT(ft.`name`,status,IF(requestee_id IS NULL,&apos;&apos;,CONCAT(&apos;(&apos;,pr.login_name,&apos;)&apos;))) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, attach_id
	, 8 AS _merge_order
FROM
    flags f
JOIN `flagtypes` ft ON f.type_id = ft.id
JOIN profiles ps ON f.setter_id = ps.userid
LEFT JOIN profiles pr ON f.requestee_id = pr.userid
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY
    bug_id</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>850</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get incremental modified bugs</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
FROM bugs b
WHERE
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>100</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get keywords</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, CAST(null AS signed) AS modified_ts
	, CAST(null AS char(255)) AS modified_by
	, &apos;keywords&apos; AS field_name
	, CAST(kd.`name` AS char(255)) AS field_value
	, CAST(null AS char(255)) AS field_value_removed
	, CAST(null AS signed) AS attach_id
	, 2 AS _merge_order
FROM keywords k
JOIN keyworddefs kd ON k.keywordid = kd.id
WHERE bug_id IN (
	SELECT bug_id FROM bugs WHERE 
    UNIX_TIMESTAMP(delta_ts)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
	)
ORDER BY bug_id;</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Get new activities</name>
    <type>TableInput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <connection>bugs</connection>
    <sql>SELECT bug_id
	, UNIX_TIMESTAMP(bug_when)*1000 AS modified_ts
	, login_name AS modified_by
	, field.`name` AS field_name
	, added AS field_value
	, removed AS field_value_removed
	, attach_id
	, 9 AS _merge_order
FROM
    sanitized_bugs_activity a
    JOIN fielddefs field ON a.fieldid = field.`id`
	JOIN (SELECT userid, login_name, realname FROM profiles) p ON a.who = p.userid
WHERE
    UNIX_TIMESTAMP(bug_when)*1000 &gt; ${START_TIME}
    AND ${BUG_IDS_PARTITION}
ORDER BY
    bug_id,
    bug_when DESC,
    attach_id</sql>
    <limit>0</limit>
    <lookup/>
    <execute_each_row>N</execute_each_row>
    <variables_active>Y</variables_active>
    <lazy_conversion_active>N</lazy_conversion_active>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>950</xloc>
      <yloc>200</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Index with ElasticSearch</name>
    <type>UserDefinedJavaClass</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>

    <definitions>
        <definition>
        <class_type>TRANSFORM_CLASS</class_type>

        <class_name>Processor</class_name>

        <class_source><![CDATA[import java.util.ArrayList;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import org.elasticsearch.action.bulk.BulkItemResponse;
import org.elasticsearch.action.bulk.BulkRequestBuilder;
import org.elasticsearch.action.bulk.BulkResponse;
import org.elasticsearch.action.index.IndexRequest;
import org.elasticsearch.action.index.IndexRequestBuilder;
import org.elasticsearch.client.Client;
import org.elasticsearch.client.transport.TransportClient;
import org.elasticsearch.common.settings.ImmutableSettings;
import org.elasticsearch.common.transport.InetSocketTransportAddress;
import org.elasticsearch.common.transport.TransportAddress;

private BulkRequestBuilder bulk = null;
private Client client;
private String esNodes = "127.0.0.1:9300";
private String esCluster = "elasticsearch";
private String esIndex = "bugs";
private int batch = 0;
private static int BULK_LOAD_MAX = 1000;
private static int BULK_TIMEOUT = 30000;

public String paramOrDefault(String parameterName, String defaultValue)
{
    String paramValue = getParameter(parameterName);
    if (paramValue != null && paramValue.length() > 0)
    {
        return paramValue;
    }
    return defaultValue;
}
public boolean processRow(StepMetaInterface smi, StepDataInterface sdi) throws KettleException
{
    batch++;
    Object[] r = getRow();

    // FIXME: use bulk loader.

    if (r == null) {

        if (bulk != null) {
            //BulkResponse response = (BulkResponse)bulk.execute().actionGet(BULK_TIMEOUT);
            BulkResponse response = (BulkResponse)bulk.execute().actionGet();
            if (response.hasFailures()) {
               System.out.println("ES Response had failures:");
               Iterator iterator = response.iterator();
                while (iterator.hasNext()) {
                    BulkItemResponse responseItem = (BulkItemResponse)iterator.next();
                    if (responseItem.failed()) {
                        System.out.println("Indexing failed for '" + responseItem.getId()
                                + "': " + responseItem.getFailureMessage());
                    }
                }
            }
            System.out.println("Loaded " + batch + " docs in " + response.getTookInMillis() + " ms");
        }

        setOutputDone();
        return false;
    }

    if (first)
    {
        first = false;

        // get esNodes and esCluster from parameters (if available)
        esNodes = paramOrDefault("ES_NODES", esNodes);
        esCluster = paramOrDefault("ES_CLUSTER", esCluster);
        esIndex = paramOrDefault("ES_INDEX", esIndex);
        ImmutableSettings.Builder settings = ImmutableSettings.settingsBuilder();
        settings.put("cluster.name", esCluster);
        TransportClient transportClient = new TransportClient(settings.build());

        String[] nodes = esNodes.split(",");
        for (int i = 0; i < nodes.length; i++)
        {
            String esNode = nodes[i].trim();
            int colon = esNode.indexOf(':');
            String host = esNode.substring(0, colon);
            int port = Integer.parseInt(esNode.substring(colon+1));
            TransportAddress a = new InetSocketTransportAddress(host, port);
            transportClient.addTransportAddress(a);
            System.out.println("Adding ElasticSearch Node " + host + ":" + port);
        }

        client = transportClient;
    }

    r = createOutputRow(r, data.outputRowMeta.size());

    if (batch >= BULK_LOAD_MAX) {
        //BulkResponse response = (BulkResponse)bulk.execute().actionGet(BULK_TIMEOUT);
        BulkResponse response = (BulkResponse)bulk.execute().actionGet();
        if (response.hasFailures()) {
           System.out.println("ES Response had failures:");
           Iterator iterator = response.iterator();
            while (iterator.hasNext()) {
                BulkItemResponse responseItem = (BulkItemResponse)iterator.next();
                if (responseItem.failed()) {
                    System.out.println("Indexing failed for '" + responseItem.getId()
                            + "': " + responseItem.getFailureMessage());
                }
            }
        }
        System.out.println("Loaded " + batch + " docs in " + response.getTookInMillis() + " ms");

        batch = 0;
        bulk = null;
    }

    if (bulk == null) {
        bulk = client.prepareBulk();
    }
    IndexRequestBuilder builder = client.prepareIndex(esIndex, "bug_version", get(Fields.In, "bug_version_id").getString(r));
    builder.setSource(get(Fields.In, "bug_version_json").getString(r));
//    if (!"undefined".equals(get(Fields.In, "bug_version_parent_id").getString(r)))
//        builder.setParent(get(Fields.In, "bug_version_parent_id").getString(r));

    IndexRequest ir = (IndexRequest)builder.request();

    bulk.add(ir);

/*
    IndexRequestBuilder builder = client.prepareIndex(esIndex, "bug_version", get(Fields.In, "bug_version_id").getString(r));
    builder.setSource(get(Fields.In, "bug_version_json").getString(r));
//    if (!"undefined".equals(get(Fields.In, "bug_version_parent_id").getString(r)))
//        builder.setParent(get(Fields.In, "bug_version_parent_id").getString(r));

    try {
    builder.execute().actionGet();
        System.out.println("Successfully indexed bug version "
                   + get(Fields.In, "bug_version_id").getString(r));
    } catch (Exception e) {
        System.out.println("Exception processing bug version "
                   + get(Fields.In, "bug_id").getString(r) + "_"
                   + get(Fields.In, "record_num").getString(r) + " - "
                   + e);
        throw e;
    }
*/
    return true;
}
]]></class_source>
        </definition>
    </definitions>
    <fields>
    </fields><clear_result_fields>N</clear_result_fields>
<info_steps></info_steps><target_steps></target_steps><usage_parameters><usage_parameter><parameter_tag>ES_NODES</parameter_tag>
<parameter_value>${ES_NODES}</parameter_value>
<parameter_description/>
</usage_parameter><usage_parameter><parameter_tag>ES_CLUSTER</parameter_tag>
<parameter_value>${ES_CLUSTER}</parameter_value>
<parameter_description/>
</usage_parameter></usage_parameters>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>1052</xloc>
      <yloc>429</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Lower Case</name>
    <type>StringOperations</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <in_stream_name>field_value</in_stream_name>
        <out_stream_name/>
        <trim_type>none</trim_type>
        <lower_upper>lower</lower_upper>
        <padding_type>none</padding_type>
        <pad_char/>
        <pad_len/>
        <init_cap>no</init_cap>
        <mask_xml>none</mask_xml>
        <digits>none</digits>
        <remove_special_characters>none</remove_special_characters>
      </field>
      <field>
        <in_stream_name>field_value_removed</in_stream_name>
        <out_stream_name/>
        <trim_type>none</trim_type>
        <lower_upper>lower</lower_upper>
        <padding_type>none</padding_type>
        <pad_char/>
        <pad_len/>
        <init_cap>no</init_cap>
        <mask_xml>none</mask_xml>
        <digits>none</digits>
        <remove_special_characters>none</remove_special_characters>
      </field>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>550</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Parse Bug History</name>
    <type>ScriptValueMod</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <compatible>N</compatible>
    <optimizationLevel/>
    <jsScripts>      <jsScript>        <jsScript_type>0</jsScript_type>
        <jsScript_name>Script 1</jsScript_name>
        <jsScript_script>&#47;&#47;var debugData = processRow(bug_id, modified, modified_on, modified_at, modified_by, field_name, field_value, field_value_removed, attach_id, _merge_order);
&#47;&#47;var new_bug_id = debugData[0].bug_id;
&#47;&#47;var bug_version_id = debugData[1]._id;
&#47;&#47;var bug_version_parent_id = debugData[1]._parent;
&#47;&#47;var bug_version_json = JSON.stringify(debugData[1]);

processRow(Number(bug_id), Number(modified_ts), String(modified_by||&apos;&apos;), String(field_name||&apos;&apos;), String(field_value||&apos;&apos;), String(field_value_removed||&apos;&apos;), String(attach_id||&apos;&apos;), Number(_merge_order));
trans_Status = SKIP_TRANSFORMATION;</jsScript_script>
      </jsScript>      <jsScript>        <jsScript_type>1</jsScript_type>
        <jsScript_name>Item_0</jsScript_name>
        <jsScript_script>LoadScriptFile(getVariable(&quot;Internal.Transformation.Filename.Directory&quot;,&quot;&quot;)+&quot;&#47;parse_bug_history.js&quot;);

startNewBug(Number(bug_id), Number(modified_ts), String(modified_by), Number(_merge_order));</jsScript_script>
      </jsScript>    </jsScripts>    <fields>      <field>        <name>new_bug_id</name>
        <rename>new_bug_id</rename>
        <type>Number</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>bug_version_id</name>
        <rename>bug_version_id</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>      <field>        <name>bug_version_json</name>
        <rename>bug_version_json</rename>
        <type>String</type>
        <length>-1</length>
        <precision>-1</precision>
        <replace>N</replace>
      </field>    </fields>     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>650</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Rownum</name>
    <type>FieldsChangeSequence</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
      <start>1</start>
      <increment>1</increment>
      <resultfieldName>record_num</resultfieldName>
    <fields>
      <field>
        <name>bug_id</name>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>750</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Sorted Merge</name>
    <type>SortedMerge</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <fields>
      <field>
        <name>bug_id</name>
        <ascending>Y</ascending>
        </field>
      <field>
        <name>_merge_order</name>
        <ascending>Y</ascending>
        </field>
      </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>450</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step>
    <name>Text file output</name>
    <type>TextFileOutput</type>
    <description/>
    <distribute>Y</distribute>
    <copies>1</copies>
         <partitioning>
           <method>none</method>
           <schema_name/>
           </partitioning>
    <separator/>
    <enclosure/>
    <enclosure_forced>N</enclosure_forced>
    <enclosure_fix_disabled>N</enclosure_fix_disabled>
    <header>N</header>
    <footer>N</footer>
    <format>None</format>
    <compression>None</compression>
    <encoding/>
    <endedLine/>
    <fileNameInField>Y</fileNameInField>
    <fileNameField>full_filename</fileNameField>
    <create_parent_folder>N</create_parent_folder>
    <file>
      <name>file</name>
      <is_command>N</is_command>
      <servlet_output>N</servlet_output>
      <do_not_open_new_file_init>Y</do_not_open_new_file_init>
      <extention>json</extention>
      <append>N</append>
      <split>N</split>
      <haspartno>N</haspartno>
      <add_date>N</add_date>
      <add_time>N</add_time>
      <SpecifyFormat>N</SpecifyFormat>
      <date_time_format/>
      <add_to_result_filenames>N</add_to_result_filenames>
      <pad>N</pad>
      <fast_dump>Y</fast_dump>
      <splitevery>0</splitevery>
    </file>
    <fields>
      <field>
        <name>bug_version_json</name>
        <type>String</type>
        <format/>
        <currency/>
        <decimal/>
        <group/>
        <nullif/>
        <trim_type>none</trim_type>
        <length>-1</length>
        <precision>-1</precision>
      </field>
    </fields>
     <cluster_schema/>
 <remotesteps>   <input>   </input>   <output>   </output> </remotesteps>    <GUI>
      <xloc>1050</xloc>
      <yloc>350</yloc>
      <draw>Y</draw>
      </GUI>
    </step>

  <step_error_handling>
  </step_error_handling>
   <slave-step-copy-partition-distribution>
</slave-step-copy-partition-distribution>
   <slave_transformation>N</slave_transformation>
</transformation>
